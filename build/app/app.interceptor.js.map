{"version":3,"sources":["app.interceptor.ts"],"names":["AuthInterceptor","AuthInterceptor.constructor","AuthInterceptor.Factory"],"mappings":"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","file":"app.interceptor.js","sourcesContent":["//Method name should be exactly \"response\" - http://docs.angularjs.org/api/ng/service/$http\r\n/// <reference path=\"typings/tsd.d.ts\" />\r\n    \r\ninterface IInterceptor {\r\n    request: Function;\r\n    requestError: Function;\r\n    response: Function;\r\n    responseError: Function;\r\n}\r\n\r\nclass AuthInterceptor implements IInterceptor {\r\n    public static $inject = [\"$injector\", \"$q\", '$templateCache'];\r\n        \r\n    // Keep track which HTML templates have already been modified.\r\n    private _modifiedTemplates: any = {};        \r\n        \r\n    // Tests if there are any keep/omit attributes.\r\n    private HAS_FLAGS_EXP: any = /data-(keep|omit)/;\r\n    \r\n    // Tests if the requested url is a html page.\r\n    private IS_HTML_PAGE: any = /\\.html$|\\.html\\?/i;\r\n\r\n    public static Factory($injector: ng.IInjectStatic, $q: ng.IQService, $templateCache: ng.ITemplateCacheService) {\r\n        return new AuthInterceptor($injector, $q, $templateCache);\r\n    }\r\n\r\n    constructor(private $injector: any, private $q: ng.IQService, private $templateCache: ng.ITemplateCacheService) {\r\n        \r\n    }\r\n\r\n    public request: Function = (requestSuccess: any): ng.IPromise<any> => {\r\n        return requestSuccess;\r\n    }\r\n    public requestError: Function = (requestFailure: any): ng.IPromise<any> => {\r\n        return requestFailure;\r\n    }\r\n    \r\n    public response: Function = (response: any): ng.IPromise<any> => {\r\n        \r\n        var that = this;\r\n        var url = response.config.url,\r\n            responseData = response.data,\r\n            authService = this.$injector.get('authService');;\r\n\r\n        if (!this._modifiedTemplates[url] && this.IS_HTML_PAGE.test(url) && this.HAS_FLAGS_EXP.test(responseData)) {\r\n              \r\n            // Create a DOM fragment from the response HTML.\r\n            var template = $('<div>').append(responseData);\r\n          \r\n            // Find and parse the keep/omit attributes in the view.\r\n            template.find('[data-keep],[data-omit]').each(function() {\r\n                var element = $(this),\r\n                    data = element.data(),\r\n                    keep = data.keep,\r\n                    features = keep || data.omit || '';\r\n                    \r\n               var userFeatures = authService.getFeatures();\r\n                \r\n                // Check if the user has all of the specified features.\r\n                var hasFeature = _.all(features.split(',') , function(feature: any) {\r\n                    return userFeatures[feature];\r\n                });\r\n\r\n                if (features.length && ((keep && !hasFeature) || (!keep && hasFeature))) {\r\n                    element.remove();\r\n                }\r\n            });\r\n          \r\n            // Set the modified template.\r\n            response.data = template.html();\r\n          \r\n            // Replace the template in the template cache, and mark the\r\n            // template as modified.\r\n            this.$templateCache.put(url, response.data);\r\n            this._modifiedTemplates[url] = true;\r\n        }\r\n\r\n        return response;\r\n    }\r\n    public responseError: Function = (responseFailure: any): ng.IPromise<any> => {\r\n        return this.$q.reject(responseFailure);\r\n    }\r\n}\r\n\r\nexport = AuthInterceptor;"],"sourceRoot":"/source/"}