{"version":3,"sources":["app.routes.ts"],"names":[],"mappings":"AAAA,wCAAwC;AAS7B,cAAM,GAAG,CAAC;QACjB,IAAI,EAAE,OAAO;QACb,OAAO,EAAE;YACL,UAAU,EAAE,gBAAgB;YACpB,QAAQ,EAAE,OAAO,CAAC,0BAA0B,CAAC;YAC7C,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE;gBACL,cAAc,EAAE,CAAC,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAC,WAAW,EAAE,UAAU,EAAE,EAAE,WAAW,EAAE,cAAc,EAAE,SAAS;wBACpH,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;wBACzB,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;4BAC3B,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE;gCAChB,OAAO,CAAC,gBAAgB,CAAC,CAAC;gCAC1B,cAAc,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,cAAc,EAAC,CAAC,CAAC;gCAC/D,OAAO,CAAC,OAAO,EAAE,CAAC;4BACrB,CAAC,CAAC,CAAC;wBACP,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,OAAO,CAAC,MAAM,EAAE,CAAC;wBACrB,CAAC;wBACF,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC1B,CAAC,CAAC;aACL;SACA,EAAC;IACF;QACZ,IAAI,EAAE,OAAO;QACb,OAAO,EAAE;YACL,UAAU,EAAE,gBAAgB;YAC5B,QAAQ,EAAE,OAAO,CAAC,0BAA0B,CAAC;YAC7C,YAAY,EAAE,IAAI;YAClB,OAAO,EAAE;gBACL,cAAc,EAAE,CAAC,IAAI,EAAE,aAAa,EAAE,gBAAgB,EAAC,WAAW,EAAE,UAAU,EAAE,EAAE,WAAW,EAAE,cAAc,EAAE,SAAS;wBACpH,IAAI,OAAO,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;wBACrB,EAAE,CAAA,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;4BAC1B,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE;gCACZ,OAAO,CAAC,gBAAgB,CAAC,CAAC;gCAC1B,cAAc,CAAC,UAAU,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAC,cAAc,EAAC,CAAC,CAAC;gCAC/D,OAAO,CAAC,OAAO,EAAE,CAAC;4BACrB,CAAC,CAAC,CAAC;wBACX,CAAC;wBACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC/B,CAAC,CAAC;aACL,EAAC;KACT;CACA,CAAC","file":"app.routes.js","sourcesContent":["///<reference path='typings/tsd.d.ts' />\r\n\r\nexport interface IRoute {\r\n    when: string\r\n    templateUrl: string\r\n    controller: string\r\n    controllerAs: string\r\n}\r\n\r\nexport var routes = [{\r\n    when: '/home',\r\n    options: {\r\n        controller: 'HomeController',\r\n                template: require('./modules/home/home.html'),\r\n                controllerAs: 'vm',\r\n                resolve: {\r\n                    loadHomeModule: ['$q', 'authService', 'moduleProvider','$location', function ($q, authService, moduleProvider, $location) {\r\n                        var defered = $q.defer();\r\n                        if (authService.isLoggedIn()) {\r\n                            require.ensure([], function () {\r\n                               require('./modules/home');\r\n                               moduleProvider.loadModule({name: 'Home', path:'modules/home'});\r\n                               defered.resolve();                           \r\n                            });\r\n                        } else {\r\n                            defered.reject();\r\n                        } \r\n                       return defered.promise;\r\n                    }]\r\n                }\r\n                }},\r\n                {\r\n    when: '/list', \r\n    options: {\r\n        controller: 'ListController',\r\n        template: require('./modules/list/list.html'),\r\n        controllerAs: 'vm',\r\n        resolve: {\r\n            loadHomeModule: ['$q', 'authService', 'moduleProvider','$location', function ($q, authService, moduleProvider, $location) {\r\n                var defered = $q.defer();\r\n                    if(authService.isLoggedIn()) {\r\n                        require.ensure([], function () {\r\n                               require('./modules/list');\r\n                               moduleProvider.loadModule({name: 'List', path:'modules/list'});\r\n                               defered.resolve();                           \r\n                            });\r\n                    }\r\n                    return defered.promise;\r\n            }]\r\n        }}\r\n}\r\n];\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"/source/"}